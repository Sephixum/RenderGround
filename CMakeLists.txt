cmake_minimum_required(VERSION 3.21)

# Set standard if it is not used by someone else
if(NOT DEFINED CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 23)
endif()
set(CMAKE_CXX_EXTENSIONS OFF)

# Export build database
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

project(
  renderground
  VERSION 0.0.1
  DESCRIPTION ""
  LANGUAGES CXX C
)

add_executable(${PROJECT_NAME})

include(Dependencies.cmake)
include(CompilerWarnings.cmake)

# Get the dependencies into a list
# Call it before adding subdirectories to make sure the ${DEPENDENCIES} is populated
project_setup_dependencies(DEPENDENCIES)
message(STATUS "Deps collected: ${DEPENDENCIES}")
project_setup_compiler_warnings()

target_include_directories(${PROJECT_NAME} PRIVATE src)

target_sources(${PROJECT_NAME} PRIVATE src/main.cpp)
target_compile_features(${PROJECT_NAME} PRIVATE cxx_std_${CMAKE_CXX_STANDARD})

add_subdirectory(src/core/window)
add_subdirectory(src/core/application)

# Link against the collected deps
target_link_libraries(${PROJECT_NAME} PRIVATE ${DEPENDENCIES} core_application core_window)
